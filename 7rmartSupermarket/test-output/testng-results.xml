<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-09T20:43:45 IST" name="multibrowsertesting" finished-at="2025-05-09T20:43:55 IST" duration-ms="9845">
    <groups>
      <group name="smoke">
        <method signature="LoginTest.verifyUserLoginwithInvalidPassword()[pri:3, instance:testScript.LoginTest@359df09a]" name="verifyUserLoginwithInvalidPassword" class="testScript.LoginTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-05-09T20:43:45 IST" name="test2" finished-at="2025-05-09T20:43:55 IST" duration-ms="9845">
      <class name="testScript.LoginTest">
        <test-method is-config="true" signature="initialiseBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@359df09a]" started-at="2025-05-09T20:43:45 IST" name="initialiseBrowser" finished-at="2025-05-09T20:43:54 IST" duration-ms="8661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseBrowser -->
        <test-method signature="verifyUserLoginwithInvalidPassword()[pri:3, instance:testScript.LoginTest@359df09a]" started-at="2025-05-09T20:43:54 IST" name="verifyUserLoginwithInvalidPassword" description="verify whether the user is unable to successfully login with invalid password" finished-at="2025-05-09T20:43:55 IST" duration-ms="1106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginwithInvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@359df09a]" started-at="2025-05-09T20:43:55 IST" name="driverQuit" finished-at="2025-05-09T20:43:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginwithInvalidPassword status=SUCCESS method=LoginTest.verifyUserLoginwithInvalidPassword()[pri:3, instance:testScript.LoginTest@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testScript.LoginTest -->
    </test> <!-- test2 -->
    <test started-at="2025-05-09T20:43:45 IST" name="test1" finished-at="2025-05-09T20:43:55 IST" duration-ms="9842">
      <class name="testScript.HomeTest">
        <test-method is-config="true" signature="initialiseBrowser(java.lang.String)[pri:0, instance:testScript.HomeTest@63376bed]" started-at="2025-05-09T20:43:45 IST" name="initialiseBrowser" finished-at="2025-05-09T20:43:49 IST" duration-ms="4395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseBrowser -->
        <test-method signature="verifyUsercanSuccessfullyLogoutAfterLogin()[pri:0, instance:testScript.HomeTest@63376bed]" started-at="2025-05-09T20:43:49 IST" name="verifyUsercanSuccessfullyLogoutAfterLogin" finished-at="2025-05-09T20:43:55 IST" duration-ms="5372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsercanSuccessfullyLogoutAfterLogin -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.HomeTest@63376bed]" started-at="2025-05-09T20:43:55 IST" name="driverQuit" finished-at="2025-05-09T20:43:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsercanSuccessfullyLogoutAfterLogin status=SUCCESS method=HomeTest.verifyUsercanSuccessfullyLogoutAfterLogin()[pri:0, instance:testScript.HomeTest@63376bed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testScript.HomeTest -->
    </test> <!-- test1 -->
  </suite> <!-- multibrowsertesting -->
</testng-results>
